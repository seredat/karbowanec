name: Release

on:
  push:
    tags:
    - '*'

jobs:
  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup MSBuild.exe
        uses: warrenbuckley/Setup-MSBuild@v1

      - name: Build
        shell: powershell
        id: build
        run: |
          $build_folder = "build"
          $krb_ver = "${{ github.ref }}" -replace 'refs/tags/'
          $release_name = "karbo-cli-win64-$krb_ver"
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -G "Visual Studio 16 2019" -A x64 ..
          msbuild Karbowanec.sln /p:Configuration=Release /m
          cd src\Release
          Compress-Archive -Path *.exe -DestinationPath "$release_name.zip"
          $sha256 = (Get-FileHash "$release_name.zip").Hash
          $asset_path = "./$build_folder/src/Release/$release_name.zip"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.zip"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=krb_ver::${krb_ver}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Karbo CLI Suite ${{ steps.build.outputs.krb_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          build_folder="build/"
          krb_ver=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          release_name="Karbo-cli-macOS-$krb_ver"
          brew install gcc boost@1.60
          brew link boost@1.60 --force
          mkdir "$build_folder"
          cd "$build_folder"
          cmake -DCMAKE_C_FLAGS="-mmacosx-version-min=10.12" -DCMAKE_CXX_FLAGS="-mmacosx-version-min=10.12" ..
          make
          mkdir "$release_name"
          exeFiles=()
          for f in src/*; do [[ -x $f && -f $f ]] && strip "$f" && exeFiles+=( "$f" ); done
          strip "${exeFiles[@]}"
          cp "${exeFiles[@]}" "$release_name/"
          zip -r "$release_name".zip "$release_name"
          sha256=$(shasum -a 256 "$release_name".zip | awk '{print toupper($1)}')
          asset_path="./$build_folder$release_name.zip"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.zip"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=krb_ver::${krb_ver}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Karbo CLI Suite ${{ steps.build.outputs.krb_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu16:
    name: Ubuntu 16.04
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          BOOST_ROOT=
          sudo apt install -y libboost-all-dev
          build_folder="build/release"
          krb_ver=$(echo "$GITHUB_REF" | sed 's|refs/tags/||')
          krb_ver_folder=$(echo $krb_ver | sed 's/\.//g')
          release_name=Karbo-cli-ubuntu16.04-"$krb_ver"
          mkdir -p "$build_folder"
          cd "$build_folder"
          cmake -D CMAKE_BUILD_TYPE=Release ../..
          make
          mkdir -p "$release_name/$krb_ver_folder"
          exeFiles=()
          for f in src/*; do [[ -x $f && -f $f ]] && exeFiles+=( "$f" ); done
          strip "${exeFiles[@]}"
          cp "${exeFiles[@]}" "$release_name/$krb_ver_folder"
          cd "$release_name"
          tar -czf "$release_name".tar.gz "$krb_ver_folder"
          sha256=$(shasum -a 256 "$release_name".tar.gz | awk '{print toupper($1)}')
          asset_path="./$build_folder/$release_name/$release_name.tar.gz"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.tar.gz"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=krb_ver::${krb_ver}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Karbo CLI Suite ${{ steps.build.outputs.krb_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ubuntu16:
    name: Ubuntu 18.04
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master

      - name: Build
        id: build
        run: |
          BOOST_ROOT=
          sudo apt install -y libboost-all-dev
          build_folder="build/release"
          krb_ver=$(echo "$GITHUB_REF" | sed 's|refs/tags/||')
          krb_ver_folder=$(echo $krb_ver | sed 's/\.//g')
          release_name=Karbo-cli-ubuntu18.04-"$krb_ver"
          mkdir -p "$build_folder"
          cd "$build_folder"
          cmake -D CMAKE_BUILD_TYPE=Release ../..
          make
          mkdir -p "$release_name/$krb_ver_folder"
          exeFiles=()
          for f in src/*; do [[ -x $f && -f $f ]] && exeFiles+=( "$f" ); done
          strip "${exeFiles[@]}"
          cp "${exeFiles[@]}" "$release_name/$krb_ver_folder"
          cd "$release_name"
          tar -czf "$release_name".tar.gz "$krb_ver_folder"
          sha256=$(shasum -a 256 "$release_name".tar.gz | awk '{print toupper($1)}')
          asset_path="./$build_folder/$release_name/$release_name.tar.gz"
          echo "::set-output name=sha256::${sha256}"
          echo "::set-output name=release_name::${release_name}.tar.gz"
          echo "::set-output name=asset_path::${asset_path}"
          echo "::set-output name=krb_ver::${krb_ver}"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Karbo CLI Suite ${{ steps.build.outputs.krb_ver }}
          body: |
            **${{ steps.build.outputs.release_name }}**
            ${{ steps.build.outputs.sha256 }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
